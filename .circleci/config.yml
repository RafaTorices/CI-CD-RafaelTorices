# CircleCI

# Version CircleCI
version: 2.1
# Default configuration
defaults: &defaults
  working_directory: ~/app # Working_directory: ~/app
  # Docker image that will be used
  docker:
    - image: cimg/python:3.11 # Python 3.11
# Jobs that will be executed
jobs:
  # Job name
  app-build:
    # Default configuration
    <<: *defaults
    # Steps that will be executed
    steps:
      # Checkout the code from the repository
      - checkout
      # Install package python3-pip for install dependencies
      # Create virtual environment for python3
      # Install dependencies with pip of requirements.txt
      - run:
          name: Build App and Install Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install python3-pip
            pip install --upgrade pip
            python3 -m venv env
            source env/bin/activate
            pip install -r requirements.txt
            pip install --upgrade pip
      # Save the virtual environment for the next job for persisting data
      - persist_to_workspace:
          root: ~/app
          paths:
            - .
  # Job name
  app-tests:
    # Default configuration
    <<: *defaults
    # Steps that will be executed
    steps:
      # Attach the workspace from the previous job for persisting data
      - attach_workspace:
          at: ~/app
      - run:
          name: Run Lint Pylint
          command: |
            # Source env
            source env/bin/activate
            # Run linter pylint to check code of app calculator.py
            pylint src/calculator.py
      # Run test coverage with pytest
      - run:
          name: Run Tests Coverage
          command: |
            # Source env
            source env/bin/activate
            # Run test coverage with pytest
            coverage run -m pytest tests/test_calculator.py
            python3 -m pytest --cov=src
      # Run test with pytest
      - run:
          name: Run Tests Pytest
          command: |
            # Source env
            source env/bin/activate
            # Run test with pytest
            python3 -m pytest
            # Create directorys for test results
            mkdir docs-test-reports
            # Generate report html of test results
            python3 -m pytest --html=./docs-tests-reports/report.html
            # Create directorys for test results
            mkdir docs-test
            # Generate report xml of test results
            python3 -m pytest --junitxml=./docs-tests/report.xml
      # Generate artifacts of test results
      - store_test_results:
          path: docs-tests/report.xml
      - store_artifacts:
          path: docs-tests-reports
          destination: docs-tests-reports
  # Job name
  app-docs:
    # Default configuration
    <<: *defaults
    # Steps that will be executed
    steps:
      # Attach the workspace from the previous job for persisting data
      - attach_workspace:
          at: ~/app
      - run:
          name: Generate Docs
          command: |
            # Create directorys for documentation of code app
            mkdir docs-html
            # Source env
            source env/bin/activate
            # Generate documentation of code app with pdoc
            pdoc src/calculator.py -o ./docs-html
      # Generate artifacts of documentation
      - store_artifacts:
          path: docs-html
          destination: docs-html
  # Job name
  app-release:
    # Default configuration
    <<: *defaults
    # Steps that will be executed
    steps:
      # Attach the workspace from the previous job for persisting data
      - attach_workspace:
          at: ~/app
      - run:
          name: Build Release Package
          command: |
            # Source env
            source env/bin/activate
             # Build release package app
            python3 -m build
      - store_artifacts:
          path: dist
          destination: dist
  # Job name
  app-deploy:
    working_directory: ~/app
    docker:
      - image: docker:latest
    # Steps that will be executed
    steps:
      # Attach the workspace from the previous job for persisting data
      - attach_workspace:
          at: ~/app
      - run:
          name: Build Docker Image
          command: |
            docker build -t rafacv99/pycalculator:latest .
            docker tag rafacv99/pycalculator:latest rafacv99/pycalculator:latest
            docker push rafacv99/pycalculator:latest
# Workflows that will be executed
workflows:
  # Workflow name
  app-workflow:
    # Jobs that will be executed
    jobs:
      # Job name
      - app-build
      - app-tests:
          requires:
            - app-build
      - app-docs:
          requires:
            - app-build
      - app-release:
          requires:
            - app-build
            - app-tests
            - app-docs
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              ignore:
                - main
      - app-deploy:
          requires:
            - app-build
            - app-tests
            - app-docs
          filters:
            branches:
              only:
                - main
